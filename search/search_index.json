{"config":{"lang":["en","fr"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"backend/dependencies/","title":"Dependencies","text":"<p>WIP</p> <ul> <li>godotenv, a project which loads env vars from a .env file</li> <li>env, a simple, zero-dependencies library to parse environment variables into structs</li> <li>zerolog, a fast and simple logger dedicated to JSON output</li> <li>mysql, a MySQL-Driver for Go's database/sql package</li> </ul>"},{"location":"backend/links/","title":"Links","text":"<p>WIP</p>"},{"location":"backend/links/#general","title":"General","text":"<ul> <li>Logging requests and headers</li> <li>Proper http server shutdown</li> <li>Grouping routes with a router</li> <li>Organizing database access</li> <li>API Pagination</li> <li>Middleware simple example</li> <li>Middleware advanced explaination</li> </ul>"},{"location":"backend/links/#powens","title":"Powens","text":"<ul> <li>Powens Console</li> <li>Powens User guide</li> <li>Powens API</li> </ul>"},{"location":"backend/links/#example","title":"Example","text":"<ul> <li>how to build a Dockerized RESTful API application in Go for a simple bookshelf</li> </ul>"},{"location":"backend/links/#demo-1","title":"Demo 1","text":"<p> HTML for content and structure</p> <p> JavaScript for interactivity</p> <p> CSS for text running out of boxes</p> <p> Internet Explorer ... huh?</p>"},{"location":"backend/links/#demo-2","title":"Demo 2","text":"<ul> <li> <p> Set up in 5 minutes</p> <p>Install <code>mkdocs-material</code> with <code>pip</code> and get up and running in minutes</p> <p> Getting started</p> </li> <li> <p> It's just Markdown</p> <p>Focus on your content and generate a responsive and searchable static site</p> <p> Reference</p> </li> <li> <p> Made to measure</p> <p>Change the colors, fonts, language, icons, logo and more with a few lines</p> <p> Customization</p> </li> <li> <p> Open Source, MIT</p> <p>Material for MkDocs is licensed under MIT and available on [GitHub]</p> <p> License</p> </li> </ul>"},{"location":"backend/setup/","title":"Setup","text":"<p>WIP</p>"},{"location":"documentation/documentation/","title":"Documentation","text":"<p>The documentation you are currently reading was made using Material for MkDocs.</p> <p>Material for MkDocs is a powerful documentation framework on top of MkDocs, a static site generator for project documentation.  </p> <p>Documentation source files are written in Markdown, and configured with a single YAML configuration file.</p>"},{"location":"documentation/documentation/#how-is-this-documentation-organized","title":"How is this documentation organized ?","text":"<p>For information, the documentation files are in the docs folder, located at root level of the repository. <pre><code>freenahi\n\u251c\u2500\u2500 backend\n\u2502  \u251c\u2500\u2500 ...\n\u2502  \u2514\u2500\u2500 ...\n\u2502\n\u251c\u2500\u2500 frontend\n\u2502  \u251c\u2500\u2500 ...\n\u2502  \u2514\u2500\u2500 ...\n|\n\u251c\u2500\u2500 docs\n\u2502  \u251c\u2500\u2500 ...\n\u2502  \u2514\u2500\u2500 ...\n|\n\u251c\u2500\u2500 .gitignore\n\u251c\u2500\u2500 LICENCE\n\u2514\u2500\u2500 README.md\n</code></pre></p> <p>Inside the docs folder, you will find the current documentation structure, which is quite simple <pre><code>docs\n\u251c\u2500\u2500 docs\n\u2502  \u251c\u2500\u2500 assets\n|  |  \u251c\u2500\u2500 ...\n\u2502  \u2502  \u2514\u2500\u2500 ...\n\u2502  \u251c\u2500\u2500 en\n|  |  \u251c\u2500\u2500 ...\n\u2502  \u2502  \u2514\u2500\u2500 ...\n\u2502  \u2514\u2500\u2500 fr\n|     \u251c\u2500\u2500 ...\n\u2502     \u2514\u2500\u2500 ...\n\u2502\n\u251c\u2500\u2500 overrides\n\u2502  \u251c\u2500\u2500 home-en.html\n\u2502  \u251c\u2500\u2500 home-fr.html\n\u2502  \u2514\u2500\u2500 main.html\n\u2502\n\u251c\u2500\u2500 mkdocs.yaml\n\u2514\u2500\u2500 requirements.txt\n</code></pre></p>"},{"location":"documentation/documentation/#build-the-documentation-locally","title":"Build the documentation locally","text":"<p>If you want to contribute to this documentation, you can do it in 2 ways :</p> <ul> <li>Manually edit a file with Github directly, with the \"Edit this page\" button of the top right corner of this page. This can be helpful for correcting typos really fast</li> <li>Build the documentation locally to write news pages</li> </ul> Info <p>Building the documentation locally should be the standard way</p> Note <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p>"},{"location":"documentation/documentation/#install-the-dependencies","title":"Install the dependencies","text":"<p>First, you need to have Python installed on your system. At the time of writing (April 2025), the last version is Python 3.13</p> WindowsLinux <p>Download and install the Python MSI from the official download page</p> <p>Python should be avalaible with your system package tool such as apt or dnf</p> <pre><code>sudo apt install python3.13\n</code></pre>"},{"location":"documentation/documentation/#create-a-virtual-environment","title":"Create a virtual environment","text":"<p>A virtual environment is a folder that you pip, the packet manager of Python, install modules into. Every project should have its own virtual environment to avoid the problem where two different projects need two different versions of the same module in order to both work properly.</p> <p>Navigate into the docs folder, then create the virtual environment here</p> WindowsLinux <pre><code>py -m venv &lt;NameOfTheVenv&gt;\n</code></pre> <pre><code>python3.13 -m venv &lt;NameOfTheVenv&gt;\n</code></pre>"},{"location":"documentation/documentation/#activate-the-virtual-environment","title":"Activate the virtual environment","text":"WindowsLinux <pre><code>&lt;NameOfTheVenv&gt;/Scripts/activate\n</code></pre> <pre><code>source &lt;NameOfTheVenv&gt;/bin/activate\n</code></pre>"},{"location":"documentation/documentation/#install-the-dependencies_1","title":"Install the dependencies","text":"<pre><code>pip install -r requirements.txt\n</code></pre>"},{"location":"documentation/documentation/#build-and-serve-the-doc","title":"Build and serve the doc","text":"<pre><code>mkdocs serve\n</code></pre> Warning <p>You may have some warnings related to the git-committers plugin (API token missing or 429 HTTP errors). This plugin is used to display the name of contributors associated with a file.</p> <p>You can follow the documentation and create a Github token, or simply deactivate the plugin in the mkdocs.yml file (enabled: false)</p>"},{"location":"documentation/documentation/#access-the-documentation","title":"Access the documentation","text":"<p>Your documentation should be up and running. Head over to http://127.0.0.1:8000/freenahi to see your documentation !</p>"},{"location":"frontend/WIP/","title":"WIP","text":"<p>Nothing to see here yet</p>"},{"location":"getStarted/application/","title":"Application","text":""},{"location":"getStarted/application/#installation","title":"Installation","text":"<p>To install Freenahi (the application, ie the frontend), just download the latest release from the releases page to your computer.  </p> <p>The app ships as a single executable file that can be run directly. When you run the app for the first time it will automatically configure itself for the current user (i.e. by creating folders in the home folder for the current user).</p> <p>You can find the latest packages for download for your environment on the releases page.  </p> <p>For now, the application only ships for Linux distributions.</p>"},{"location":"getStarted/application/#linux","title":"Linux","text":"Note <p>The app is shipped in the AppImage format, so it can be used without requiring installation and run on many different Linux distributions.</p> <ul> <li>Download the latest AppImage file from the releases page and make it executable. To make it executable, enter the command: chmod +x downloadedFile</li> <li>Execute it to start the app.</li> </ul> Tip <p>If you get the following error: AppImages require FUSE to run., you need to first install FUSE on your system. This is a library required by all AppImages to function. Please see this page for details.</p>"},{"location":"getStarted/application/#windows","title":"Windows","text":"<p>This is a work in a progress</p>"},{"location":"getStarted/application/#from-source","title":"From source","text":"<p>It is also possible to build and run the app directly from the source on the github repository. For that to work, your system needs to be setup for building Fyne apps, which requires you to have installed :</p> <ul> <li>the Go tools</li> <li>a C compiler</li> <li>system graphics driver</li> </ul> <p>For more details, please see Fyne - Getting started.</p> <p>When you have all necessary tools installed, you can build and run this app directly from the repository with:</p> <pre><code>go run github.com/soragXYZ/freenahi@latest\n</code></pre>"},{"location":"getStarted/application/#unsupported-platforms","title":"Unsupported platforms","text":"<p>Mobile phone and MacOS are not supported at the moment and will probably never be</p>"},{"location":"getStarted/application/#first-launch","title":"First launch","text":"<p>When you have downloaded the correct executable for your environment, you can now start it for the first time.  </p> <p>On the first launch, a new window should show up, similar to this one:</p> <p></p> <p>If you have this screen, congratulations, you successfully launched the application.</p> <p>In the next page, we will see how to configure the backend so we can connect our bank accounts and get our first data.</p> Info <p>Note that in the bottom right corner the application indicates that there is an error with the backend. This is the intended behaviour since the backend is not configured yet.</p>"},{"location":"getStarted/backend/","title":"Server (backend)","text":""},{"location":"getStarted/backend/#server","title":"Server","text":"<p>If you have the application running, the next step is to configure the backend.</p> <p>Just as the frontend which is light and cross platform, the backend is actually an image. It makes it more easier to deploy, manage and update.</p> <p>The backend receives data from Powens API and store them in a mySQL database.</p>"},{"location":"getStarted/backend/#mysql-database","title":"MySQL database","text":"<p>First, you have to create a mySQL database.  </p> <p>Instructions are located here.</p> <p>When your mySQL database is up and running, you can initialize the table. For now, there are 6 of them.  </p> <p>You can copy / paste the command from the migration folder directly in a console, or source the files if you cloned the repo.</p> <pre><code>source /&lt;yourPath&gt;/freenahi/backend/migrations/authToken.sql\nsource /&lt;yourPath&gt;/freenahi/backend/migrations/bankAccount.sql\nsource /&lt;yourPath&gt;/freenahi/backend/migrations/historyValue.sql\nsource /&lt;yourPath&gt;/freenahi/backend/migrations/invest.sql\nsource /&lt;yourPath&gt;/freenahi/backend/migrations/loan.sql\nsource /&lt;yourPath&gt;/freenahi/backend/migrations/tx.sql\n</code></pre>"},{"location":"getStarted/backend/#container-image","title":"Container image","text":"<p>To set up the backend, you need to have an engine container installed on your system (possibly different that the one which hosts the application).  </p> <p>You can install Podman. More information here if needed.</p> <p>Podman is a daemonless, open source, Linux native tool designed to make it easy to find, run, build, share and deploy applications using Open Containers Initiative (OCI) Containers and Container Images.</p> Tip <p>Docker can be used too, but Podman is known to be a better alternative than Docker</p>"},{"location":"getStarted/backend/#the-image","title":"The image","text":"<p>The image is hosted here on the docker hub</p> <p>To download the image:</p> podmandocker <pre><code>podman pull soragxyz/freenahi:X.Y.Z\n</code></pre> <pre><code>docker pull soragxyz/freenahi:X.Y.Z\n</code></pre> <p>Before running the image, you need to configure multiple environment variables :</p> Name Role Example value POWENS_CLIENT_ID Credentials to connect to Powens API XXXXX POWENS_CLIENT_SECRET Credentials to connect to Powens API XXXXX POWENS_DOMAIN Credentials to connect to Powens API XXXXX POWENS_WEBVIEW_URL The URL webview https://webview.powens.com/ POWENS_REDIRECT_URL The redirection link for the webview https://xxxx/ POWENS_WHITELISTED_IPS The whitelisted IPs for your backend 127.0.0.1,::1,13.39.29.243,15.188.68.198,13.39.95.239 DB_NAME Your DDB name XXXXX DB_HOST Your DDB IP localhost DB_PORT Your DDB port 3306 DB_USER Your DDB username XXXXX DB_PASS Your DDB password XXXXX SERVER_PORT The port used by the server 8080 SERVER_TIMEOUT_READ Server config for timeout 3s SERVER_TIMEOUT_WRITE Server config for timeout 5s SERVER_TIMEOUT_IDLE Server config for timeout 5s SERVER_LOG_LEVEL The logs level trace OTHER_LANGUAGE The langage for the webview en <p>If needed, there is an environment example file located here. You need to update your environment variables according to your configuration.  </p> <p>You can get powens environment variables when creating your account. See Powens page</p> Danger <p>For now, there is no authentication mecanism, which means that if an IP is in the whitelisted IPs, it has full access and can query the backend to retrieve data. It is recommended to run the application and the server locally at first.</p>"},{"location":"getStarted/backend/#start-the-backend","title":"Start the backend","text":"<p>Now that you have configured your Powens account, the database and the server, you should be able to start the server</p> <p>To start it, you have set the environment variables. You can manually specify a file where every environment variable is declared :  </p> podmandocker <pre><code>podman run --env-file &lt;pathToEnv&gt; soragxyz/freenahi:X.Y.Z\n</code></pre> <pre><code>docker run --env-file &lt;pathToEnv&gt; soragxyz/freenahi:X.Y.Z\n</code></pre> Tip <p>If you don't want to use a file, you can specify every environment variable with the option --env.  </p> <p>Also, the option --network=host might be usefull if you are running the application and the server on the same machine.</p>"},{"location":"getStarted/powens/","title":"Powens","text":"<p>The first thing to do to use Freenahi is to create a Powens account to get responses from its API. Powens is the third-party that will agregate your banking data.</p> Info <p>If you want more information on Powens and how it works, please read this page.</p> <p>If needed, you can follow Powens documentation to create your account.</p>"},{"location":"getStarted/powens/#create-an-account","title":"Create an account","text":"<p>Navigate to this page and create your account</p> <p></p> <p>You can then check your inbox, confirm your account and log in. Congratulations, and welcome to Powens Console.</p>"},{"location":"getStarted/powens/#company-details","title":"Company details","text":"<p>Once logged in, you will have to fill a few information about your company to create your organization. Here is the information to be filled in:</p> <ul> <li>company name</li> <li>company size</li> <li>country</li> <li>activity area</li> </ul> <p>Your company name will be used as organization name and also to create your first workspace.</p> <p></p> Tip <p>Note that you can fill these fields with random data</p>"},{"location":"getStarted/powens/#create-a-workspace-and-register-your-domain","title":"Create a workspace and register your domain","text":"<p>From here, you need to create a workspace. Choose the name that you want, it does not really matter</p> <p></p> <p>Once your organization and first workspace are created, click on the creation button and choose a domain name. The domain will be created as a \"sandbox\" configuration, and automatically suffixed with -sandbox.biapi.pro.  </p> <p>Keep this name in mind because you will use it later for configuring the Freenahi backend.</p> <p></p>"},{"location":"getStarted/powens/#create-a-client-application","title":"Create a client application","text":"<p>Next thing to do is to create a client application. The definition of a client application lets you configure the associated Webview, which is the window in which you will fill you banking credentials.</p> <p></p> <p>You must field the name of your client application, but you can let the other fields as is. Your client application should now appear in the list of client applications.</p> <p></p>"},{"location":"getStarted/powens/#register-a-webhook","title":"Register a webhook","text":"<p>Powens provide us with a webhook mechanism that is the recommanded approach to be notified when new data is available. You can declare a subscription to a webhook in the console and Powens will push the data to your backend when the appropriate event occurs.</p> <p>First thing to do is to register an email in order to receive webhook-related alerts in case something goes wrong</p> <p></p> <p>After that, we can create our first webhook. For now, we are using only 1 webhook, connection_synced. Click and the + icon and add it.</p> <p></p> <p>You need to configure the callback URL. The callback URL is the endpoint which will be called by Powens to send the data it had aggregated from your banking accounts. To configure it, you need enter either your personal public IP (if you plan to host Freenahi at home) or your private domain name. Your public IP is given by your Internet Service Provider (ISP).</p> Info <p>If you are hosting Freenahi at home, you need a fixed public IP. Check with your ISP if it is not the case.</p> <p>You can get your public IP at this link. Be sure to deactivate your VPN is you have one.</p> <p>Then, you need to complete your IP with the port you want to use (80 or 443) and the endpoint of the backend which deals with this webhook: /webhook/connection_synced/</p> <p>For example, if your public IP is 1.2.3.4 and you want to use the port 443 (default port for https), then you need to enter https://1.2.3.4:443/webhook/connection_synced/</p> <p></p>"},{"location":"getStarted/powens/#connectors","title":"Connectors","text":"<p>Connectors represent business institutions that Powens can establish connections with, in order to extract data. For example, you have a connector with BoursoBank, American Express... By default, only 33 connectors are activated (out of 1941 !)</p> <p>You can activate every connector for simplicity in the connector tab.</p>"},{"location":"getStarted/powens/#get-the-credentials-of-your-application","title":"Get the credentials of your application","text":"<p>The last step is to get the credentials and environment variables needed by the Freenahi backend. Currently, you need 3 of them :</p> <ul> <li>The Client ID and Client secret, available in the client application tab</li> <li>The domain name you choose earlier, available in the domain tab</li> </ul> <p>Here the domain name is testfortest </p>"},{"location":"getStarted/verify/","title":"First data","text":"<p>So now you should have a Powens account, a running backend server and you should be able to start the application.  </p> <p>To verify that the application can successfully contact the backend, you can launch it and check the status of the server in the bottom right corner of the application.</p> <p></p> <p>The server status should be green (everything is fine), or orange (an update is available).</p>"},{"location":"getStarted/verify/#connect-a-test-account","title":"Connect a test account","text":"<p>To receive your first data, you can go to the Account tabs and click on the Manage Powens accounts button.  </p> <p>Your browser should open. From here, you can add your accounts (real data) or use a demo account to retrieve fake data.  </p> <p>To retrieve fake data, you can use the connector Connecteur de test and use fake data.</p>"},{"location":"other/contribute/","title":"Contributing","text":"<p>Freenahi is an actively maintained and constantly evolving project serving a diverse user base with versatile backgrounds and needs. In order to efficiently address the requirements of all our users, evaluate change requests, and fix bugs, we put in a lot of work.</p>"},{"location":"other/contribute/#how-you-can-contribute","title":"How you can contribute","text":"<p>In this section, we guide your through our processes.</p> <ul> <li> <p> Something is not working?</p> <p>Report a bug in Material for MkDocs by creating an issue with a reproduction</p> <p> Report a bug</p> </li> <li> <p> Missing information in our docs?</p> <p>Report missing information or potential inconsistencies in our documentation</p> <p> Report a docs issue</p> </li> <li> <p> Want to submit an idea?</p> <p>Propose a change, feature request, or suggest an improvement</p> <p> Request a change</p> </li> <li> <p> Have a question or need help?</p> <p>Ask a question on our discussion board and get in touch with our community</p> <p> Ask a question</p> </li> </ul>"},{"location":"other/contribute/#contributing_1","title":"Contributing","text":"<ul> <li> <p> Missing support for your language?</p> <p>Add or improve translations for a new or already supported language</p> <p> Add translations</p> </li> <li> <p> Want to create a pull request?</p> <p>Learn how to create a comprehensive and useful pull request (PR)</p> <p> Create a pull request</p> </li> </ul>"},{"location":"other/contribute/#checklist","title":"Checklist","text":"<p>Before interacting within the project, please take a moment to consider the following questions. By doing so, you can ensure that you are using the correct issue template and that you provide all necessary information when interacting with our community.</p> <p>Issues, discussions, and comments are forever</p> <p>Please note that everything you write is permanent and will remain for everyone to read \u2013 forever. Therefore, please always be nice and constructive.</p>"},{"location":"other/contribute/#before-creating-an-issue","title":"Before creating an issue","text":"<ul> <li> <p>Have you checked if a similar bug report or change request has already been   created, or have you stumbled upon something that might be related?</p> </li> <li> <p>Did you fill out every field as requested and did you provide all additional   information we maintainers need to comprehend your request?</p> </li> </ul>"},{"location":"other/contribute/#before-asking-a-question","title":"Before asking a question","text":"<ul> <li> <p>Is there an open discussion on the topic of your request? If the answer is yes,   does your question match the direction of the discussion, or should you open a   new discussion?</p> </li> <li> <p>Did your provide our community with all the necessary information to   understand your question and help you quickly, or can you make it easier to   help you?</p> </li> </ul>"},{"location":"other/contribute/#before-commenting","title":"Before commenting","text":"<ul> <li> <p>Is your comment relevant to the topic of the current page, post, issue, or   discussion, or is it a better idea to create a new issue or discussion?</p> </li> <li> <p>Does your comment add value to the conversation? Is it constructive and   respectful to our community and us maintainers? Could you just use a    reaction instead?</p> </li> </ul>"},{"location":"other/contribute/#rights-and-responsibilities","title":"Rights and responsibilities","text":"<p>As maintainers, we are entrusted with the responsibility to moderate communication within our community, including the authority to close, remove, reject, or edit issues, discussions, comments, commits, and to block users who do not align with our contribution guidelines. This role requires us to be actively involved in maintaining the integrity and positive atmosphere of our community. Upholding these standards decisively ensures a respectful and inclusive environment for all members.</p>"},{"location":"whatIs/freenahi/","title":"What is Freenahi ?","text":"<p>Freenahi is an app that helps you better manage your money. Track all your assets, manage your budget, optimize your investments, and take action.</p> <p>Freenahi was built with the idea that if you have multiple banking accounts,  with multiple investments, it becomes quite tedious to follow everything.  </p> <p>Of course you can use Excel with Google finance shenanigans, but it does not  allow you to follow your bank account and transactions in real time.</p> <p>Last but not least, Freenahi is free, opensource and supposed to be run locally,  because we think that your banking data should stay private and under your control.</p> <p>In order to connect to your banking account, we are using the Powens API</p> Warning <p>Freenahi does not have access to your credentials, they are stored by the third-party account aggregator Powens</p>"},{"location":"whatIs/powens/","title":"Powens","text":"From Powens website <p>Powens is a platform that brings together Open Finance and Embedded Banking, empowering businesses to create innovative products and streamline their financial operations through frictionless and fully automated banking and payment experiences.</p>"},{"location":"whatIs/powens/#links","title":"Links","text":"<p>You will find out more informations in their documentations :</p> <p> Website</p> <p> General Documentation</p> <p> API Documentation</p>"},{"location":"fr/backend/dependencies/","title":"Dependencies","text":"<p>I AM A TEST</p>"},{"location":"fr/backend/dependencies/#ok-1","title":"OK 1","text":"<ul> <li>godotenv, a project which loads env vars from a .env file</li> <li>env, a simple, zero-dependencies library to parse environment variables into structs</li> <li>zerolog, a fast and simple logger dedicated to JSON output</li> <li>mysql, a MySQL-Driver for Go's database/sql package</li> </ul>"},{"location":"fr/backend/dependencies/#ok-1_1","title":"OK 1","text":"<ul> <li>godotenv, a project which loads env vars from a .env file</li> <li>env, a simple, zero-dependencies library to parse environment variables into structs</li> <li>zerolog, a fast and simple logger dedicated to JSON output</li> <li>mysql, a MySQL-Driver for Go's database/sql package</li> </ul>"},{"location":"fr/backend/dependencies/#ok-1_2","title":"OK 1","text":"<ul> <li>godotenv, a project which loads env vars from a .env file</li> <li>env, a simple, zero-dependencies library to parse environment variables into structs</li> <li>zerolog, a fast and simple logger dedicated to JSON output</li> <li>mysql, a MySQL-Driver for Go's database/sql package</li> </ul>"},{"location":"fr/backend/dependencies/#ok-1_3","title":"OK 1","text":"<ul> <li>godotenv, a project which loads env vars from a .env file</li> <li>env, a simple, zero-dependencies library to parse environment variables into structs</li> <li>zerolog, a fast and simple logger dedicated to JSON output</li> <li>mysql, a MySQL-Driver for Go's database/sql package</li> </ul>"},{"location":"fr/backend/dependencies/#ok-1_4","title":"OK 1","text":"<ul> <li>godotenv, a project which loads env vars from a .env file</li> <li>env, a simple, zero-dependencies library to parse environment variables into structs</li> <li>zerolog, a fast and simple logger dedicated to JSON output</li> <li>mysql, a MySQL-Driver for Go's database/sql package</li> </ul>"},{"location":"fr/backend/dependencies/#ok-1_5","title":"OK 1","text":"<ul> <li>godotenv, a project which loads env vars from a .env file</li> <li>env, a simple, zero-dependencies library to parse environment variables into structs</li> <li>zerolog, a fast and simple logger dedicated to JSON output</li> <li>mysql, a MySQL-Driver for Go's database/sql package</li> </ul>"},{"location":"fr/backend/dependencies/#ok-1_6","title":"OK 1","text":"<ul> <li>godotenv, a project which loads env vars from a .env file</li> <li>env, a simple, zero-dependencies library to parse environment variables into structs</li> <li>zerolog, a fast and simple logger dedicated to JSON output</li> <li>mysql, a MySQL-Driver for Go's database/sql package</li> </ul>"},{"location":"fr/backend/dependencies/#ok-1_7","title":"OK 1","text":"<ul> <li>godotenv, a project which loads env vars from a .env file</li> <li>env, a simple, zero-dependencies library to parse environment variables into structs</li> <li>zerolog, a fast and simple logger dedicated to JSON output</li> <li>mysql, a MySQL-Driver for Go's database/sql package</li> </ul>"},{"location":"fr/backend/dependencies/#ok-1_8","title":"OK 1","text":"<ul> <li>godotenv, a project which loads env vars from a .env file</li> <li>env, a simple, zero-dependencies library to parse environment variables into structs</li> <li>zerolog, a fast and simple logger dedicated to JSON output</li> <li>mysql, a MySQL-Driver for Go's database/sql package</li> </ul>"},{"location":"fr/backend/dependencies/#ok-1_9","title":"OK 1","text":"<ul> <li>godotenv, a project which loads env vars from a .env file</li> <li>env, a simple, zero-dependencies library to parse environment variables into structs</li> <li>zerolog, a fast and simple logger dedicated to JSON output</li> <li>mysql, a MySQL-Driver for Go's database/sql package</li> </ul>"},{"location":"fr/backend/dependencies/#ok-1_10","title":"OK 1","text":"<ul> <li>godotenv, a project which loads env vars from a .env file</li> <li>env, a simple, zero-dependencies library to parse environment variables into structs</li> <li>zerolog, a fast and simple logger dedicated to JSON output</li> <li>mysql, a MySQL-Driver for Go's database/sql package</li> </ul>"},{"location":"fr/backend/dependencies/#ok-1_11","title":"OK 1","text":"<ul> <li>godotenv, a project which loads env vars from a .env file</li> <li>env, a simple, zero-dependencies library to parse environment variables into structs</li> <li>zerolog, a fast and simple logger dedicated to JSON output</li> <li>mysql, a MySQL-Driver for Go's database/sql package</li> </ul>"},{"location":"fr/backend/dependencies/#ok-1_12","title":"OK 1","text":"<ul> <li>godotenv, a project which loads env vars from a .env file</li> <li>env, a simple, zero-dependencies library to parse environment variables into structs</li> <li>zerolog, a fast and simple logger dedicated to JSON output</li> <li>mysql, a MySQL-Driver for Go's database/sql package</li> </ul>"},{"location":"fr/backend/dependencies/#ok-1_13","title":"OK 1","text":"<ul> <li>godotenv, a project which loads env vars from a .env file</li> <li>env, a simple, zero-dependencies library to parse environment variables into structs</li> <li>zerolog, a fast and simple logger dedicated to JSON output</li> <li>mysql, a MySQL-Driver for Go's database/sql package</li> </ul>"},{"location":"fr/backend/dependencies/#ok-1_14","title":"OK 1","text":"<ul> <li>godotenv, a project which loads env vars from a .env file</li> <li>env, a simple, zero-dependencies library to parse environment variables into structs</li> <li>zerolog, a fast and simple logger dedicated to JSON output</li> <li>mysql, a MySQL-Driver for Go's database/sql package</li> </ul>"},{"location":"fr/backend/dependencies/#ok-1_15","title":"OK 1","text":"<ul> <li>godotenv, a project which loads env vars from a .env file</li> <li>env, a simple, zero-dependencies library to parse environment variables into structs</li> <li>zerolog, a fast and simple logger dedicated to JSON output</li> <li>mysql, a MySQL-Driver for Go's database/sql package</li> </ul>"},{"location":"fr/backend/links/","title":"Links","text":""},{"location":"fr/backend/setup/","title":"Setup","text":"<ul> <li>Installer golang</li> </ul> <pre><code>sudo apt install golang\n</code></pre> <ul> <li>Install and configure mysql <pre><code>sudo apt install mysql-server\n</code></pre></li> </ul> <p>Configure DB: <pre><code>sudo mysql\ncreate database xxxxx\nuse xxxxx\n</code></pre></p> <p>Executing an sql source (.sql file with DROP CREATE instructions) <pre><code>source /path/to/sqlFile\n</code></pre></p> <p>If driver is needed <pre><code>go get -u github.com/go-sql-driver/mysql\n</code></pre></p> <ul> <li>Build and display this documentation locally</li> </ul> <p>Install Python <pre><code>sudo add-apt-repository ppa:deadsnakes/ppa\nsudo apt update\nsudo apt install python3.13\n</code></pre></p> <p>Create a venv (do it in the doc folder) <pre><code>cd doc\npython3.13 -m venv venv\nsource venv/bin/activate\npip install mkdocs-material\nmkdocs serve\n</code></pre></p>"},{"location":"fr/documentation/documentation/","title":"Documentation","text":"<p>WIIIP</p>"},{"location":"fr/frontend/WIP/","title":"WIP","text":"<p>En construction</p>"},{"location":"fr/getStarted/application/","title":"Application","text":"<p>WIP FR</p>"},{"location":"fr/getStarted/powens/","title":"Powens","text":"<p>La premi\u00e8re chose \u00e0 faire pour utiliser Freenahi est de se cr\u00e9er un compte Powens pour pouvoir r\u00e9cup\u00e9rer les r\u00e9ponses de leur API. Powens est l'utilitaire qui va permettre d'aggr\u00e9ger vos donn\u00e9es bancaires.</p> Info <p>Si vous voulez avoir plus d'informations sur Powens et son fonctionnement, vous pouvez consulter cette page.</p> <p>Si besoin, vous pouvez aussi suivre la documentation de Powens pour cr\u00e9er votre compte.</p>"},{"location":"fr/getStarted/powens/#creer-un-compte","title":"Cr\u00e9er un compte","text":"<p>Rendez-vous sur cette page et cr\u00e9er votre compte</p> <p></p> <p>Vous pouvez v\u00e9rifier votre bo\u00eete mail, confirmer votre adresse mail puis vous connecter. Vous aurez d\u00e9sormais acc\u00e8s \u00e0 la console de Powens.</p>"},{"location":"fr/getStarted/powens/#details-de-lentreprise","title":"D\u00e9tails de l'entreprise","text":"<p>Une fois connect\u00e9, vous aurez quelques informations \u00e0 fournir pour pouvoir cr\u00e9er votre \"entreprise\". Les informations \u00e0 fournir sont:</p> <ul> <li>Le nom de l'entreprise</li> <li>Sa taille</li> <li>Son pays d'activite</li> <li>Son domaine d'activit\u00e9</li> </ul> <p>Le nom de votre entreprise sera utilis\u00e9 pour cr\u00e9er votre organisation et votre premier espace de travail.</p> <p></p> Tip <p>Vous pouvez remplir ces champs avec des donn\u00e9es al\u00e9atoires</p>"},{"location":"fr/getStarted/powens/#creer-un-espace-de-travail-et-enregistrer-son-domaine","title":"Cr\u00e9er un espace de travail et enregistrer son domaine","text":"<p>A partir de l\u00e0, il faut cr\u00e9er un espace de travail. Vous pouvez choisir le nom que vous voulez, cela n'a pas r\u00e9ellement d'importance.</p> <p></p> <p>Quand votre organisation et votre premier espace de travail auront \u00e9t\u00e9 cr\u00e9\u00e9s, vous pouvez cliquer sur le bouton de cr\u00e9ation et choisir un nom de domaine. Le domaine sera cr\u00e9\u00e9 dans une configuration \"bac \u00e0 sable\", et sera automatiquement suffix\u00e9 par -sandbox.biapi.pro.  </p> <p>Gardez votre nom de domaine not\u00e9 quelque part car vous en aurez besoin plus tard pour la configuration du backend.</p> <p></p>"},{"location":"fr/getStarted/powens/#creer-une-application-client","title":"Cr\u00e9er une application client","text":"<p>La prochaine chose \u00e0 faire est de cr\u00e9er une application client. Sa d\u00e9finition permet de configurer la webview associ\u00e9e, qui est la fen\u00eatre qui s'affichera lorsque vous devrez rentrer vos identifiants bancaires.</p> <p></p> <p>Vous devez rentrer le nom de votre application client, mais vous pouvez laisser les autres champs tel quel. Votre application devrait maintenant appara\u00eetre dans la liste.</p> <p></p>"},{"location":"fr/getStarted/powens/#enregistrer-un-webhook","title":"Enregistrer un webhook","text":"<p>Powens met \u00e0 disposition des webhooks. L'utilisation de webhook est l'approche recommand\u00e9e pour \u00eatre notifi\u00e9 quand des nouvelles donn\u00e9es sont disponibles. Vous pouvez vous abonner \u00e0 un webhook dans la console et Powens enverra automatiquement les donn\u00e9es associ\u00e9es \u00e0 l'\u00e9v\u00e8nement qui s'est produit.</p> <p>La premi\u00e8re chose \u00e0 faire est d'enregistrer un email pour recevoir les alertes li\u00e9es au webhooks dans le cas ou quelque chose ne se passerait pas comme pr\u00e9vu.</p> <p></p> <p>Apr\u00e8s ca, nous pouvons cr\u00e9er notre premier webhook. Actuellement, 1 seul webhook est n\u00e9cessaire, connection_synced. Cliquez sur le bouton + et ajoutez-le.</p> <p></p> <p>Il faut ensuite configurer l'URL de callback. L'URL de callback est l'endpoint qui sera appel\u00e9 par Powens pour envoyer les donn\u00e9es qu'il a aggr\u00e9g\u00e9 \u00e0 partir de vos comptes bancaires. Pour le configurer, il faut entrer votre adresse IP publique (si vous voulez h\u00e9berger Freenahi chez vous) or le nom de votre domaine priv\u00e9. Votre adresse publique vous est donn\u00e9e par votre fournisseur d'acc\u00e8s Internet (FAI).</p> Info <p>Si vous h\u00e9bergez Freenahi chez vous, vous avez besoin d'une adresse IP fixe. V\u00e9rifiez avec votre FAI si c'est bien le cas.</p> <p>Vous pouvez obtenir votre adresse IP publique \u00e0 cette adresse. D\u00e9sactivez votre VPN si vous en utilisez un.</p> <p>Ensuite, vous devez compl\u00e9ter votre IP avec le port que vous souhaitez utiliser (80 ou 443 en g\u00e9n\u00e9ral) et le endpoint du backend qui g\u00e8re ce webhook: /webhook/connection_synced/</p> <p>Par exemple, si votre adresse publique est 1.2.3.4 et que vous voulez utiliser le port 443 (port par d\u00e9faut pour l'HTTPS), alors vous devez entrer https://1.2.3.4:443/webhook/connection_synced/</p> <p></p>"},{"location":"fr/getStarted/powens/#connecteurs","title":"Connecteurs","text":"<p>Les connecteurs repr\u00e9sentent des institutions avec lesquelles Powens peut \u00e9tablir une connexion pour r\u00e9cup\u00e9rer des donn\u00e9es. Par exemple, vous avez un connecteur avec BoursoBank, American Express... Par d\u00e9faut, seulement 33 connecteurs sont activ\u00e9s (sur un total de 1941 !)</p> <p>Par simplicit\u00e9, vous pouvez activer tous les connecteurs dans l'onglet connecteur.</p>"},{"location":"fr/getStarted/powens/#obtenir-les-identifiants-de-son-application","title":"Obtenir les identifiants de son application","text":"<p>La derni\u00e8re \u00e9tape est d'obtenir les identifiants et les variables d'environnement n\u00e9cessaires pour notre backend. Pour le moment, 3 sont n\u00e9cessaires:</p> <ul> <li>Le \"Client ID\" et \"Client secret\", disponibles dans l'onglet application client</li> <li>Le nom de domaine que vous avez choisi pr\u00e9cedemment, disponible dans l'onglet domaine</li> </ul> <p>Ici le nom de domaine est testfortest </p>"},{"location":"fr/other/contribute/","title":"Contribuer","text":"<p>En construction</p>"},{"location":"fr/whatIs/freenahi/","title":"What is Freenahi","text":"<p>Rien a voir ici</p>"}]}